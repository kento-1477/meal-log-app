name: CI Check (Linter, Test, Security Audit)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    services:
      test_db:
        image: postgres:13
        env:
          POSTGRES_DB: test_meal_log_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5433:5432
        options: >
          --health-cmd "pg_isready -U test_user -d test_meal_log_db"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for test_db to be ready
        run: | 
          for i in $(seq 1 10); do
            nc -z localhost 5433 && break
            echo "Waiting for postgres to be ready..."
            sleep 5
          done

      - name: Initialize test database schema
        run: | 
          PGPASSWORD=test_password psql -h localhost -p 5433 -U test_user -d test_meal_log_db -f schema.sql
          PGPASSWORD=test_password psql -h localhost -p 5433 -U test_user -d test_meal_log_db -c "INSERT INTO users (id, email, password_hash) VALUES (1, 'test@example.com', 'hashed_password') ON CONFLICT (id) DO NOTHING;"
          PGPASSWORD=test_password psql -h localhost -p 5433 -U test_user -d test_meal_log_db -c "INSERT INTO meal_logs (user_id, meal_name, protein, fat, carbs, calories, timestamp) VALUES (1, 'Test Meal', 10, 5, 20, 200, '2024-01-01T12:00:00Z') ON CONFLICT (id) DO NOTHING;"
        env:
          PGPASSWORD: test_password

      - name: Run Linter
        run: npm run lint --if-present

      - name: Run tests
        run: npm test --if-present
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5433/test_meal_log_db

      - name: Run security audit
        run: npm audit --audit-level=high
